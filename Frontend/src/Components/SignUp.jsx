import React, { Component } from 'react';
import Dropdown from 'react-dropdown';
import { firebaseApp, optrakUserRef } from '../firebase';
import 'react-dropdown/style.css';
import { Link, BrowserRouter, Route } from 'react-router-dom';
import { DropdownButton, MenuItem, Form, FormGroup, FormControl, ControlLabel, Button } from 'react-bootstrap';
import Web3 from 'web3';

const web3 = new Web3(Web3.givenProvider || "http://localhost:8545");

//creates our smart contract instance using the current user's address from metamask or Mist browser or whatever they're using
//contract address is used in this instantiation, will have to change whenever the contract is deployed to somewhere else
const contract = web3.eth.getAccounts().then(e => {
    const optrakContract = new web3.eth.Contract([{"constant":true,"inputs":[{"name":"provider1","type":"string"},{"name":"provider2","type":"string"},{"name":"patientName","type":"string"}],"name":"getPatientAccess","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"patient","type":"string"},{"name":"pubkey","type":"string"},{"name":"uid","type":"string"}],"name":"addPatient","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"sharer","type":"string"},{"name":"metaName","type":"string"},{"name":"sharee","type":"string"}],"name":"getMetaDataAccess","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"sharer","type":"string"},{"name":"metaName","type":"string"},{"name":"sharee","type":"string"},{"name":"uid","type":"string"},{"name":"access","type":"bool"}],"name":"updateMetaDataAccess","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"provider","type":"string"},{"name":"pubkey","type":"string"}],"name":"addProvider","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"provider","type":"string"},{"name":"index","type":"uint256"}],"name":"getMetaName","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"provider","type":"string"},{"name":"metaName","type":"string"}],"name":"getMetaData","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"patientName","type":"string"},{"name":"uid","type":"string"}],"name":"getPatientProvider","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"provider","type":"string"},{"name":"metaName","type":"string"},{"name":"content","type":"string"},{"name":"overwrite","type":"bool"}],"name":"addMetaData","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"provider","type":"string"}],"name":"getProviderPubkey","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"provider","type":"string"}],"name":"getProviderMetaCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"patientId","type":"string"},{"indexed":false,"name":"patientName","type":"string"},{"indexed":false,"name":"timeStamp","type":"uint256"}],"name":"PatientAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"patientId","type":"string"},{"indexed":false,"name":"patientName","type":"string"},{"indexed":false,"name":"sharer","type":"string"},{"indexed":false,"name":"sharee","type":"string"},{"indexed":false,"name":"timeStamp","type":"uint256"}],"name":"InformationShared","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}], "0x9223d120341eb4a794a99a9ad0e1f18d29f196cf", {
        from: e[0],
        data: '',
        gas: '5000000',
    }); //creates instance of the contract as part of the promise


    return optrakContract; //returns instance of contract as the result of promise
}
);





class SignUp extends Component {

    constructor(props) {
        super(props);
        this.state = {
            password: '',
            pubkey: '',
            name: '',
            provStatus: false,
            email: '',
            btnTitle: 'User Type',
            w3Active: false,
            error: {
                message: ''
            }
        };
        this._onSelect = this._onSelect.bind(this);

    }

    checkFields() {
        //Checks different fields of the signup form to verify they have all been entered correctly
        if (this.state.email.length == 0) {
            this.setState({ error: { message: 'Please enter your email' } });
            return false;
        }
        else if (this.state.password.length < 6) {
            this.setState({ error: { message: 'Please enter a longer password' } });
            return false;
        }
        else if (this.state.btnTitle == 'User Type') {
            this.setState({ error: { message: 'Please select a user type' } });
            return false;
        }
        else if (this.state.name == '') {
            this.setState({ error: { message: 'Please enter your provider or patient name' } });
            return false;
        }
        else {
            return true;
        }

    }

    addProvider = async () => {
        if(this.checkFields()) {
            //verifies that necessary fields are filled out
            contract.then(optrakContract => {
                this.setState({pubkey: optrakContract.options.from});
                //the .from address is the current user, thus we log their public key during account creation
                const {email, password} = this.state;
                //current email and password are assumed to be correct at this point due to previous checks in checkFields()
                firebaseApp.auth().createUserWithEmailAndPassword(email, password).then(() => {
                    //firebase is used to create a new fuser with an email and password, making for very easy authentication
                    console.log(this.state.pubkey);
                    optrakContract.methods.addProvider(this.state.name, this.state.pubkey).send().on('receipt', async(receipt) => {
                        //optrak instance is called upon here to add the current provider
                        //upon the transaction finishing and receiving a receipt, the following commands fire
                        console.log(receipt);
                        optrakUserRef.push(this.state); //pushes the current user to optrak user database (might not be necessary)
                        firebaseApp.auth().onAuthStateChanged(user => {
                            if(user) {
                                user.sendEmailVerification();
                                user.updateProfile({displayName: this.state.name});
                                //Sends email verification necessary for login and sets the user's displayName to the entered name
                            }
                        })
                        firebaseApp.auth().signOut(); //signs out the user before redirecting them
                        this.props.history.push('./signin');
                    }).catch(error => {
                        if(error) {
                            console.log(error);
                            this.setState({error});
                        firebaseApp.auth().onAuthStateChanged(user => {
                            if(user) {
                                user.delete().then(firebaseApp.auth().signOut());
                                window.location.reload();
                                //if the transaction failed then the created user will be deleted and signed out and the page will be 
                                //refreshed, allowing the user to try again
                            }
                            else {
                                return null;
                            }
                        })
                        }
                        
                    })
                }).catch(error => {
                    this.setState({error});
                }) 
            })
            
        }
    
    }

    verifyWeb3 = async () => {
        let accounts = await web3.eth.getAccounts();
        let length = accounts.length;
        console.log(length);
        this.setState({w3Active: (length !== 0)});
    }




    signUp = async () => {
        console.log("this.state", this.state);

        await this.addProvider();
    }
    _onSelect(option) {
        console.log('You selected ', option)
        if (option == "Patient") {
            this.setState({ provStatus: false });
            this.setState({ btnTitle: option });
        }
        else {
            this.setState({ provStatus: true });
            this.setState({ btnTitle: option });
        }

    }

    componentWillMount(){
        this.verifyWeb3();
    }

    render() {
        console.log(this.state.w3Active);
        const displayObject = (this.state.w3Active) ?
        (
            <form inline="true">
                <h3>Register for OpTrak</h3>
                <div className="form-group">
                    <DropdownButton
                        bsStyle={'primary'}
                        title={this.state.btnTitle}
                        id={`dropdown-basic-1`}
                    >
                        <MenuItem eventKey="Patient" onSelect={this._onSelect}>
                            Patient
                </MenuItem>
                        <MenuItem eventKey="Provider" onSelect={this._onSelect}>
                            Provider
                </MenuItem>
                    </DropdownButton>

                    <input className="form-control" type="text" placeholder="Email Address" onChange={event => this.setState({ email: event.target.value })} />
                    <input
                        className="form-control"
                        type="password"
                        placeholder="Password"
                        onChange={event => this.setState({ password: event.target.value })} />
                    <input
                        className="form-control"
                        type="text"
                        placeholder="Provider or Patient Name"
                        onChange={event => this.setState({ name: event.target.value })} />
                    <button className="btn btn-primary"
                        type="button"
                        onClick={() => 
                            {
                                this.verifyWeb3();
                                if (this.state.w3Active){
                                    this.signUp();
                                }
                            }
                        }

                    >
                        Complete Registration
                </button>
                </div>
                <div>{this.state.error.message}</div>
                <div><Link to={'/signin'}> Sign in instead </Link> </div>
            </form>
        ):
        (
            <div>
                Provide a web3 provider, then refresh the page
            </div>
        );
            
        
        return (
            <div>
            {displayObject}
            </div>
        );
    }
}

export default SignUp;

export {contract};